diff --git a/app/Resources/views/security/login.html.twig b/app/Resources/views/security/login.html.twig
index 13520f8..16094c6 100644
--- a/app/Resources/views/security/login.html.twig
+++ b/app/Resources/views/security/login.html.twig
@@ -17,6 +17,7 @@
         </div>
 
         <br/>
+        <a href="{{ path('connect_facebook') }}">Login with Facebook</a>
         <button type="submit">Login</button>
     </form>
 {% endblock %}
diff --git a/app/config/parameters.yml.dist b/app/config/parameters.yml.dist
index 886c92b..e414639 100644
--- a/app/config/parameters.yml.dist
+++ b/app/config/parameters.yml.dist
@@ -17,3 +17,6 @@ parameters:
 
     # A secret key that's used to generate certain security-related tokens
     secret:            ThisTokenIsNotSoSecretChangeIt
+
+    facebook_app_id: foo
+    facebook_app_secret: bar
diff --git a/app/config/security.yml b/app/config/security.yml
index e98c155..f9ff3e2 100644
--- a/app/config/security.yml
+++ b/app/config/security.yml
@@ -22,6 +22,7 @@ security:
                 authenticators:
                     - form_login_authenticator
                     - jwt_authenticator
+                    - api_facebook_authenticator
                 entry_point: form_login_authenticator
             # activate different ways to authenticate
 
diff --git a/app/config/services.yml b/app/config/services.yml
index 4c0f791..e4005e1 100644
--- a/app/config/services.yml
+++ b/app/config/services.yml
@@ -10,7 +10,21 @@ services:
         arguments:
             - '@doctrine.orm.entity_manager'
 
+    api_facebook_authenticator:
+        class: AppBundle\Security\FacebookAuthenticator
+        arguments:
+            - '@service_container'
+
     spooky_user_provider:
         class: AppBundle\Security\SpookyUserProvider
         arguments:
             - '@doctrine.orm.entity_manager'
+
+    app.facebook_provider:
+        class: League\OAuth2\Client\Provider\Facebook
+        arguments:
+            -
+                clientId: %facebook_app_id%
+                clientSecret: %facebook_app_secret%
+                graphApiVersion: v2.3
+                redirectUri: "@=service('router').generate('connect_facebook_check', {}, true)"
diff --git a/composer.json b/composer.json
index c7d7d02..23c2abd 100644
--- a/composer.json
+++ b/composer.json
@@ -22,7 +22,8 @@
         "sensio/distribution-bundle": "^5.0",
         "sensio/framework-extra-bundle": "^3.0.2",
         "incenteev/composer-parameter-handler": "~2.0",
-        "lexik/jwt-authentication-bundle": "^1.4"
+        "lexik/jwt-authentication-bundle": "^1.4",
+        "league/oauth2-facebook": "^1.1"
     },
     "require-dev": {
         "sensio/generator-bundle": "^3.0",
diff --git a/composer.lock b/composer.lock
index af70065..46971fe 100644
--- a/composer.lock
+++ b/composer.lock
@@ -4,8 +4,8 @@
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file",
         "This file is @generated automatically"
     ],
-    "hash": "b8bae61cc63070e496ad6f85330d6465",
-    "content-hash": "be8d2333f4205668fcb961d7cde6756a",
+    "hash": "a48db9594a06f6c538a17b299db615e4",
+    "content-hash": "653158f72a833917aa6c212ee6bedea0",
     "packages": [
         {
             "name": "doctrine/annotations",
@@ -773,6 +773,177 @@
             "time": "2016-01-05 21:34:58"
         },
         {
+            "name": "guzzlehttp/guzzle",
+            "version": "6.1.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/guzzle/guzzle.git",
+                "reference": "c6851d6e48f63b69357cbfa55bca116448140e0c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/guzzle/guzzle/zipball/c6851d6e48f63b69357cbfa55bca116448140e0c",
+                "reference": "c6851d6e48f63b69357cbfa55bca116448140e0c",
+                "shasum": ""
+            },
+            "require": {
+                "guzzlehttp/promises": "~1.0",
+                "guzzlehttp/psr7": "~1.1",
+                "php": ">=5.5.0"
+            },
+            "require-dev": {
+                "ext-curl": "*",
+                "phpunit/phpunit": "~4.0",
+                "psr/log": "~1.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "6.1-dev"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "src/functions_include.php"
+                ],
+                "psr-4": {
+                    "GuzzleHttp\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Michael Dowling",
+                    "email": "mtdowling@gmail.com",
+                    "homepage": "https://github.com/mtdowling"
+                }
+            ],
+            "description": "Guzzle is a PHP HTTP client library",
+            "homepage": "http://guzzlephp.org/",
+            "keywords": [
+                "client",
+                "curl",
+                "framework",
+                "http",
+                "http client",
+                "rest",
+                "web service"
+            ],
+            "time": "2015-11-23 00:47:50"
+        },
+        {
+            "name": "guzzlehttp/promises",
+            "version": "1.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/guzzle/promises.git",
+                "reference": "b1e1c0d55f8083c71eda2c28c12a228d708294ea"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/guzzle/promises/zipball/b1e1c0d55f8083c71eda2c28c12a228d708294ea",
+                "reference": "b1e1c0d55f8083c71eda2c28c12a228d708294ea",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.5.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "~4.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "GuzzleHttp\\Promise\\": "src/"
+                },
+                "files": [
+                    "src/functions_include.php"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Michael Dowling",
+                    "email": "mtdowling@gmail.com",
+                    "homepage": "https://github.com/mtdowling"
+                }
+            ],
+            "description": "Guzzle promises library",
+            "keywords": [
+                "promise"
+            ],
+            "time": "2015-10-15 22:28:00"
+        },
+        {
+            "name": "guzzlehttp/psr7",
+            "version": "1.2.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/guzzle/psr7.git",
+                "reference": "f5d04bdd2881ac89abde1fb78cc234bce24327bb"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/guzzle/psr7/zipball/f5d04bdd2881ac89abde1fb78cc234bce24327bb",
+                "reference": "f5d04bdd2881ac89abde1fb78cc234bce24327bb",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.4.0",
+                "psr/http-message": "~1.0"
+            },
+            "provide": {
+                "psr/http-message-implementation": "1.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "~4.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "GuzzleHttp\\Psr7\\": "src/"
+                },
+                "files": [
+                    "src/functions_include.php"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Michael Dowling",
+                    "email": "mtdowling@gmail.com",
+                    "homepage": "https://github.com/mtdowling"
+                }
+            ],
+            "description": "PSR-7 message implementation",
+            "keywords": [
+                "http",
+                "message",
+                "stream",
+                "uri"
+            ],
+            "time": "2016-01-23 01:23:02"
+        },
+        {
             "name": "incenteev/composer-parameter-handler",
             "version": "v2.1.2",
             "source": {
@@ -824,6 +995,101 @@
             "time": "2015-11-10 17:04:01"
         },
         {
+            "name": "ircmaxell/random-lib",
+            "version": "v1.1.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/ircmaxell/RandomLib.git",
+                "reference": "13efa4368bb2ac88bb3b1459b487d907de4dbf7c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/ircmaxell/RandomLib/zipball/13efa4368bb2ac88bb3b1459b487d907de4dbf7c",
+                "reference": "13efa4368bb2ac88bb3b1459b487d907de4dbf7c",
+                "shasum": ""
+            },
+            "require": {
+                "ircmaxell/security-lib": "1.0.*@dev",
+                "php": ">=5.3.2"
+            },
+            "require-dev": {
+                "mikey179/vfsstream": "1.1.*",
+                "phpunit/phpunit": "3.7.*"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-0": {
+                    "RandomLib": "lib"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Anthony Ferrara",
+                    "email": "ircmaxell@ircmaxell.com",
+                    "homepage": "http://blog.ircmaxell.com"
+                }
+            ],
+            "description": "A Library For Generating Secure Random Numbers",
+            "homepage": "https://github.com/ircmaxell/RandomLib",
+            "keywords": [
+                "cryptography",
+                "random",
+                "random-numbers",
+                "random-strings"
+            ],
+            "time": "2015-01-15 16:31:45"
+        },
+        {
+            "name": "ircmaxell/security-lib",
+            "version": "1.0.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/ircmaxell/SecurityLib.git",
+                "reference": "80934de3c482dcafb46b5756e59ebece082b6dc7"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/ircmaxell/SecurityLib/zipball/80934de3c482dcafb46b5756e59ebece082b6dc7",
+                "reference": "80934de3c482dcafb46b5756e59ebece082b6dc7",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.3.2"
+            },
+            "require-dev": {
+                "mikey179/vfsstream": "1.1.*"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-0": {
+                    "SecurityLib": "lib"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Anthony Ferrara",
+                    "email": "ircmaxell@ircmaxell.com",
+                    "homepage": "http://blog.ircmaxell.com"
+                }
+            ],
+            "description": "A Base Security Library",
+            "homepage": "https://github.com/ircmaxell/PHP-SecurityLib",
+            "time": "2013-04-30 18:00:34"
+        },
+        {
             "name": "jdorn/sql-formatter",
             "version": "v1.2.17",
             "source": {
@@ -874,6 +1140,120 @@
             "time": "2014-01-12 16:20:24"
         },
         {
+            "name": "league/oauth2-client",
+            "version": "1.2.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/thephpleague/oauth2-client.git",
+                "reference": "4f1a51817090b861651cf3497cd25714a7cabed5"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/thephpleague/oauth2-client/zipball/4f1a51817090b861651cf3497cd25714a7cabed5",
+                "reference": "4f1a51817090b861651cf3497cd25714a7cabed5",
+                "shasum": ""
+            },
+            "require": {
+                "ext-curl": "*",
+                "guzzlehttp/guzzle": "~6.0",
+                "ircmaxell/random-lib": "~1.1",
+                "php": ">=5.5.0"
+            },
+            "require-dev": {
+                "jakub-onderka/php-parallel-lint": "0.8.*",
+                "mockery/mockery": "~0.9",
+                "phpunit/phpunit": "~4.0",
+                "satooshi/php-coveralls": "0.6.*",
+                "squizlabs/php_codesniffer": "~2.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "League\\OAuth2\\Client\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Alex Bilbie",
+                    "email": "hello@alexbilbie.com",
+                    "homepage": "http://www.alexbilbie.com",
+                    "role": "Developer"
+                }
+            ],
+            "description": "OAuth 2.0 Client Library",
+            "keywords": [
+                "Authentication",
+                "SSO",
+                "authorization",
+                "identity",
+                "idp",
+                "oauth",
+                "oauth2",
+                "single sign on"
+            ],
+            "time": "2016-01-23 18:02:07"
+        },
+        {
+            "name": "league/oauth2-facebook",
+            "version": "1.1.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/thephpleague/oauth2-facebook.git",
+                "reference": "0cd44ead57f05f7b8b728dcbf20bab1b56990718"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/thephpleague/oauth2-facebook/zipball/0cd44ead57f05f7b8b728dcbf20bab1b56990718",
+                "reference": "0cd44ead57f05f7b8b728dcbf20bab1b56990718",
+                "shasum": ""
+            },
+            "require": {
+                "league/oauth2-client": "~1.0",
+                "php": ">=5.5.0"
+            },
+            "require-dev": {
+                "mockery/mockery": "~0.9",
+                "phpunit/phpunit": "~4.0",
+                "squizlabs/php_codesniffer": "~2.0"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "League\\OAuth2\\Client\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Sammy Kaye Powers",
+                    "email": "me@sammyk.me",
+                    "homepage": "http://www.sammyk.me"
+                }
+            ],
+            "description": "Facebook OAuth 2.0 Client Provider for The PHP League OAuth2-Client",
+            "keywords": [
+                "Authentication",
+                "authorization",
+                "client",
+                "facebook",
+                "oauth",
+                "oauth2"
+            ],
+            "time": "2015-09-16 22:00:46"
+        },
+        {
             "name": "lexik/jwt-authentication-bundle",
             "version": "v1.4.3",
             "target-dir": "Lexik/Bundle/JWTAuthenticationBundle",
@@ -1223,6 +1603,55 @@
             "time": "2016-01-18 17:07:21"
         },
         {
+            "name": "psr/http-message",
+            "version": "1.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/http-message.git",
+                "reference": "85d63699f0dbedb190bbd4b0d2b9dc707ea4c298"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/http-message/zipball/85d63699f0dbedb190bbd4b0d2b9dc707ea4c298",
+                "reference": "85d63699f0dbedb190bbd4b0d2b9dc707ea4c298",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.3.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Psr\\Http\\Message\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "http://www.php-fig.org/"
+                }
+            ],
+            "description": "Common interface for HTTP messages",
+            "keywords": [
+                "http",
+                "http-message",
+                "psr",
+                "psr-7",
+                "request",
+                "response"
+            ],
+            "time": "2015-05-04 20:22:00"
+        },
+        {
             "name": "psr/log",
             "version": "1.0.0",
             "source": {
diff --git a/src/AppBundle/Controller/FacebookController.php b/src/AppBundle/Controller/FacebookController.php
new file mode 100644
index 0000000..3f3a039
--- /dev/null
+++ b/src/AppBundle/Controller/FacebookController.php
@@ -0,0 +1,33 @@
+<?php
+
+namespace AppBundle\Controller;
+
+use Symfony\Bundle\FrameworkBundle\Controller\Controller;
+use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
+
+class FacebookController extends Controller
+{
+    /**
+     * @Route("/connect/facebook", name="connect_facebook")
+     */
+    public function connectFacebookAction()
+    {
+        // redirect to Facebook
+        $facebookOAuthProvider = $this->get('app.facebook_provider');
+
+        $url = $facebookOAuthProvider->getAuthorizationUrl([
+            // these are actually the default scopes
+            'scopes' => ['public_profile', 'email'],
+        ]);
+
+        return $this->redirect($url);
+    }
+
+    /**
+     * @Route("/connect/facebook-check", name="connect_facebook_check")
+     */
+    public function connectFacebookActionCheck()
+    {
+        // will not be reached!
+    }
+}
\ No newline at end of file
diff --git a/src/AppBundle/Security/FacebookAuthenticator.php b/src/AppBundle/Security/FacebookAuthenticator.php
new file mode 100644
index 0000000..3f7fe93
--- /dev/null
+++ b/src/AppBundle/Security/FacebookAuthenticator.php
@@ -0,0 +1,123 @@
+<?php
+
+namespace AppBundle\Security;
+
+use AppBundle\Entity\User;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
+use League\OAuth2\Client\Provider\FacebookUser;
+use Symfony\Component\DependencyInjection\ContainerInterface;
+use Symfony\Component\HttpFoundation\RedirectResponse;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
+use Symfony\Component\Security\Core\Exception\AuthenticationException;
+use Symfony\Component\Security\Core\Exception\CustomUserMessageAuthenticationException;
+use Symfony\Component\Security\Core\Security;
+use Symfony\Component\Security\Core\User\UserInterface;
+use Symfony\Component\Security\Core\User\UserProviderInterface;
+use Symfony\Component\Security\Guard\AbstractGuardAuthenticator;
+
+class FacebookAuthenticator extends AbstractGuardAuthenticator
+{
+    private $container;
+
+    public function __construct(ContainerInterface $container)
+    {
+        $this->container = $container;
+    }
+
+    public function getCredentials(Request $request)
+    {
+        if ($request->getPathInfo() != '/connect/facebook-check') {
+            return;
+        }
+
+        if ($code = $request->query->get('code')) {
+            return $code;
+        }
+
+        throw new CustomUserMessageAuthenticationException(
+            'Dude, you messed up authorizing us in Facebook!'
+        );
+    }
+
+    public function getUser($credentials, UserProviderInterface $userProvider)
+    {
+        $authorizationCode = $credentials;
+
+        $facebookProvider = $this->container->get('app.facebook_provider');
+
+        try {
+            // the credentials are really the access token
+            $accessToken = $facebookProvider->getAccessToken(
+                'authorization_code',
+                ['code' => $authorizationCode]
+            );
+        } catch (IdentityProviderException $e) {
+            // you could parse the response to see the problem
+            return;
+        }
+
+        /** @var FacebookUser $facebookUser */
+        $facebookUser = $facebookProvider->getResourceOwner($accessToken);
+
+        $em = $this->container->get('doctrine')->getManager();
+
+        // 1) have they logged in with Facebook before? Easy!
+        $user = $em->getRepository('AppBundle:User')
+            ->findOneBy(array('email' => $facebookUser->getEmail()));
+        if ($user) {
+            return $user;
+        }
+
+        // 2) no user? Perhaps you just want to create one
+        //  (or redirect to a registration)
+        $user = new User(
+            $facebookUser->getName(),
+            sha1('SOME_RANDOM_STRING'.mt_rand()),
+            $facebookUser->getEmail()
+        );
+        $em->persist($user);
+        $em->flush();
+
+        return $user;
+    }
+
+    public function checkCredentials($credentials, UserInterface $user)
+    {
+        // TODO: Implement checkCredentials() method.
+    }
+
+    public function onAuthenticationFailure(Request $request, AuthenticationException $exception)
+    {
+        // this would happen if something went wrong in the OAuth flow
+        $request->getSession()->set(Security::AUTHENTICATION_ERROR, $exception);
+
+        $url = $this->container->get('router')
+            ->generate('security_login');
+
+        return new RedirectResponse($url);
+    }
+
+    public function onAuthenticationSuccess(Request $request, TokenInterface $token, $providerKey)
+    {
+        $targetPath = $request->getSession()->get('_security.'.$providerKey.'.target_path');
+
+        if (!$targetPath) {
+            $router = $this->container->get('router');
+            $targetPath = $router->generate('homepage');
+        }
+
+        return new RedirectResponse($targetPath);
+    }
+
+    public function supportsRememberMe()
+    {
+        return true;
+    }
+
+    public function start(Request $request, AuthenticationException $authException = null)
+    {
+        throw new \Exception('not used in our app');
+    }
+}
\ No newline at end of file
